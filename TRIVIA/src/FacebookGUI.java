import java.util.List;

import com.restfb.Connection;
import com.restfb.DefaultFacebookClient;
import com.restfb.Facebook;
import com.restfb.FacebookClient;
import com.restfb.Parameter;
import com.restfb.Version;
import com.restfb.types.FacebookType;
import com.restfb.types.User;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author He
 */
public class FacebookGUI extends javax.swing.JFrame {

	public static FacebookClient client;
    /**
     * Creates new form FacebookGUI
     */
    public FacebookGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 543, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 460, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FacebookGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FacebookGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FacebookGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FacebookGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FacebookGUI().setVisible(true);
            }
        });
    }

    /**
     * This method returns the url where we let the user log in.
     * @return the url for user to log in.
     */
    public static String firstRequestToFacebookApi() {
    	return "https://graph.facebook.com/oauth/authorize?client_id=919159891453375&"
    			+ "redirect_uri=http://www.facebook.com/connect/login_success.html&scope=publish_stream,create_event";
    }
    
    /**
     * This method takes in the redirected URL and then return a new url where we can get the
     * actual access token.
     * @param redirectedUrl  the url after caling "firstRequestToFacebookAPI"
     * @return a new URL to be processed and it's result be processed by getAccessToken
     */
    public static String afterRedirected(String redirectedUrl) {
    	String match = "code=";
    	int index = redirectedUrl.indexOf(match);
    	index += 5;
    	String verification_code = redirectedUrl.substring(index);
    	StringBuilder builder = new StringBuilder();
    	builder.append("https://graph.facebook.com/oauth/access_token?client_id=919159891453375&redirect_uri="
    			+ "http://www.facebook.com/connect/login_success.html&"
    			+ "client_secret=7b82a8f50ec2ba5ba547ba3829b900fa&code=").append(verification_code);
    	return builder.toString();
    }
    
    /**
     * This method takes in the second redirected URL from "afterRedirected" and returns the access token.
     * @param secondRespond the url after calling afterRedirected
     * @return the access token to be saved.
     */
    public static String getAccessToken(String secondRespond) {
    	String match = "access_token=";
    	int index = secondRespond.indexOf(match);
    	index += 13;
    	return secondRespond.substring(index);
    }
    
    /**
     * This returns a client (we need to set up the accessToken).  
     * This function does not support logging out and changing accessToken.
     * @param accessToken the accessToken from getAccessToken
     * @return Facebook client
     */
    public static FacebookClient getFacebookClient(String accessToken){
    	if (client == null) {
    		client = new DefaultFacebookClient(accessToken, "7b82a8f50ec2ba5ba547ba3829b900fa", 
        			Version.VERSION_2_0);
    	} 
    	return client;
    }
    
    /**
     * This method takes in the facebookClient and the message to be posted onto the newsfeed.
     * @param facebookClient the client
     * @param message the message to be posted
     * @return the id of the response of the request.
     */
    public static String postMessageOnWall(FacebookClient facebookClient, String message){
    	
    	FacebookType publishMessageResponse = facebookClient.publish("me/feed", FacebookType.class,
    			    Parameter.with("message", message));
    	return publishMessageResponse.getId();
    }
    
    /**
     * This function takes in the client and find all his friends.  
     * @param facebookClient the logged in facebook client
     * @return a list of users.
     */
    public static List<User> getFriends(FacebookClient facebookClient){
    	Connection<User> myFriends = facebookClient.fetchConnection("me/friends", User.class);
    	return myFriends.getData();
    }
    
    /**
     * Do not think this method would work, but worth a shot. 
     * http://stackoverflow.com/questions/6072839/facebook-send-an-app-invitation
     * @param facebookClient facebook client
     * @param user the user from the getFriends
     * @param message message for the invite
     * @param data data for the invite
     * @return something.
     */
    public static AppRequestResponse inviteRequest(FacebookClient facebookClient, User user, String message, String data){
    	return facebookClient.publish(user.getId()+"/apprequests", AppRequestResponse.class,
    			Parameter.with("message", message), Parameter.with("data", data));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
    
    public static class AppRequestResponse extends FacebookType
    {
        private static final long serialVersionUID = 1L;

        public AppRequestResponse()
        {
            // Empty
        }

        @Facebook
        public String request;

        @Facebook
        public String to;
    }
}
